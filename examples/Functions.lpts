The identity function on integers

> intId = lambda x : Int . x;

has type Int -> Int

> assert intId: Int -> Int;

and works for at least one number

> assert intId 42 = 42;


Polymorphic identity function

> id = lambda X : * . lambda x : X . x;

The polymorphic identity function instantiated for Int is the same as intId

> assert id Int: Int -> Int = intId;

> assert id Int 42 = 42;

Identity of identity is identity

> assert id (Pi X : * . X -> X) id = id;


Function composition

> comp (A B C : *) (f : B -> C) (g : A -> B) = lambda x : A . f (g x);
